{"version":3,"sources":["../../../app/controllers/folders_edit_controller.js"],"names":["Encompass","FoldersEditController","Ember","Controller","extend","CurrentUserMixin","workspace","inject","controller","currentWorkspace","computed","alias","browseOption","bySelection","equal","bySubmission","includeSubfolders","submissionsCol","selectionsCol","commentsCol","foldersCol","showSubmissionFolders","showSubmissionComments","showSubmissionSelections","showSubmissionSelectionsComments","showSubmissionSelectionsFolders","showSelectionSubmission","showSelectionComments","showSelectionFolders","showSubmissionSelectionsStuff","or","canEdit","user","get","ws","Permissions","userCan","property","evidence","model","selectedSubmissions","selectionGroups","submissions","getEach","uniq","result","A","forEach","item","selections","filterBy","rowspan","length","addObject","Object","create","submission","content","span","actions","radioSelect","value","set","changeSubmission","selector","window","opener","$","click","transitionToRoute","changeSelection","selection","run","send","removeSelection","folder","propertyWillChange","then","taggings","tagging","findBy","save"],"mappings":"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","file":"folders_edit_controller.js","sourcesContent":["/**\n  * # Folder Controller\n  * TODO: - remove selection sometimes generates an error.  \n  *       - remove not reflected in the selection count on the workspace page.\n  * @description This controls the editable view of an individual folder. \n  *              It is used by the folders.edit route & template.  \n  * @authors Damola Mabogunje <damola@mathforum.org>, Amir Tahvildaran <amir@mathforum.org>\n  * @todo This should probably be a view\n  * @since 1.0.0\n  */\n\nEncompass.FoldersEditController = Ember.Controller.extend(Encompass.CurrentUserMixin, {\n  workspace: Ember.inject.controller(),\n  currentWorkspace: Ember.computed.alias('workspace.model'),\n  browseOption: 1,\n  bySelection: Ember.computed.equal('browseOption', 0),\n  bySubmission: Ember.computed.equal('browseOption', 1),\n  includeSubfolders: true,\n  submissionsCol: true,\n  selectionsCol: true,\n  commentsCol: false,\n  foldersCol: false,\n  showSubmissionFolders: false,\n  showSubmissionComments: false,\n  showSubmissionSelections: true,\n  showSubmissionSelectionsComments: false,\n  showSubmissionSelectionsFolders: true,\n  showSelectionSubmission: true,\n  showSelectionComments: true,\n  showSelectionFolders: true,\n  \n  showSubmissionSelectionsStuff: Ember.computed.or('showSubmissionSelectionsComments', 'showSubmissionSelectionsFolders'),\n\n  canEdit: function() {\n    var user = this.get('currentUser'),\n        ws   = this.get('currentWorkspace');\n\n    return Permissions.userCan(user, ws, \"SELECTIONS\");\n  }.property('currentUser', 'currentWorkspace'),\n\n  evidence: function() {\n    if(this.get('includeSubfolders')){\n      return this.model.get('_selections');\n    }\n    return this.model.get('selections');\n  }.property('model', 'selections', '_selections', 'includeSubfolders'),\n\n  selectedSubmissions: function() {\n    if(this.get('includeSubfolders')){\n      return this.model.get('_submissions');\n    }\n    return this.model.get('submissions');\n  }.property('model', 'submissions', '_submissions', 'includeSubfolders'),\n\n  // This is just groupBy i.e selections.groupBy(submission)\n  selectionGroups: function () {\n    var controller = this;\n    var submissions = this.model.get('_selections').getEach('submission').uniq();\n    var result = Ember.A();\n\n    submissions.forEach(function(item) {\n      var selections = controller.model.get('_selections').filterBy('submission', item);\n      var rowspan = 1 + selections.length;\n\n      result.addObject(Ember.Object.create({\n        submission: item,\n        content: selections,\n        span: rowspan\n      }));\n    });\n\n    return result;\n  }.property('_selections.@each.submission'),\n/*\n  path: function() {\n    var path = [this.get('model')];\n    var ancestor = this.get('model.parent');\n\n    while(ancestor) {\n      console.log(ancestor.get('parent'));\n      path.push(ancestor.get('parent'));\n      ancestor = ancestor.get('parent');\n    }\n\n    return path.reverseObjects();\n  }.property('parent'),\n*/\n  actions: {\n    radioSelect: function( value ){\n      this.set('browseOption', value );\n    },\n\n    changeSubmission: function(submission) {\n      var selector = '.submissionLink.' + submission.get('id');\n      if(window.opener) {\n        window.opener.$(selector).click();\n      } else {\n        this.transitionToRoute('workspace.submission', this.get('currentWorkspace'), submission);\n      }\n    },\n\n    changeSelection: function(selection) {\n      var controller = this;\n      var selector = '.selectionLink.' + selection.get('id');\n      \n      //console.log(selector);\n      Ember.run(function() {\n        controller.send('changeSubmission', selection.get('submission'));\n        if(window.opener) {\n          window.opener.$(selector).click();\n        } else {\n          controller.transitionToRoute('workspace.submission.selection', \n            selection.get('workspace'),\n            selection.get('submission'), \n            selection);\n        }\n      });\n    },\n\n    removeSelection: function(selection, folder) { //ENC-574 Because a selection may also be in a sub-folder, also make the folder a param \n      this.propertyWillChange('taggings');\n\n//      console.log(selection, folder);\n//      var selectionId = selection.get('id');\n//      var folderId = folder.get('id');\n\n      /* ENC-574\n       * Find the unique tagging of both this selection and the passed folder\n       * Note: This approach is performance intensive, leading to many requests\n       * TODO: Optimize\n       */\n      selection.get('taggings').then( function(taggings) {\n        var tagging = taggings.findBy('folder', folder);\n        if(tagging) { // This should always be true\n          tagging.set('isTrashed', true);\n          tagging.save();\n        }\n      });\n\n      //just don't reload per max's request it takes too much time\n      //if(window.opener) { //if we are a popup\n      //  // Refresh the workspace (opener) so the folder counts update... \n      //  //   (We shouldn't need to do this (why? we might want to use socket.io))\n      //  window.opener.location.reload(true); \n      //}\n    }    \n  }\n});\n"]}