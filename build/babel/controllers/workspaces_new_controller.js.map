{"version":3,"sources":["../../../app/controllers/workspaces_new_controller.js"],"names":["Encompass","WorkspacesNewController","Ember","Controller","extend","CurrentUserMixin","canEdit","computed","not","teacher","oneWay","selectedPdSetId","selectedFolderSetId","hasId","or","hasDate","importMode","isPdImport","equal","isPowImport","actions","radioSelect","value","console","log","set","createWorkspace","controller","doPoWImport","get","run","send","newWorkspace","pdSetName","folderSetName","request","store","createRecord","save","then","obj","transitionToRoute","importWorkspace","importData","submitter","publication","puzzle","class_id","collection","folders","since_date","Date","parse","max_date","isNone","window","alert","isAny","submissions","String","w","output","result","imported","updatedExisting","confirm","location","reload"],"mappings":";;AAAA;;;;;;;AAOAA,UAAUC,uBAAV,GAAoCC,MAAMC,UAAN,CAAiBC,MAAjB,CAAwBJ,UAAUK,gBAAlC,EAAoD;AACtFC,WAASJ,MAAMK,QAAN,CAAeC,GAAf,CAAmB,qBAAnB,CAD6E;AAEtFC,WAASP,MAAMK,QAAN,CAAeG,MAAf,CAAsB,sBAAtB,CAF6E;;AAItFC,mBAAiB,IAJqE;AAKtFC,uBAAqB,IALiE;;AAOtFC,SAAOX,MAAMK,QAAN,CAAeO,EAAf,CAAkB,OAAlB,EAA2B,QAA3B,EAAqC,MAArC,CAP+E;AAQtFC,WAASb,MAAMK,QAAN,CAAeO,EAAf,CAAkB,WAAlB,EAA+B,SAA/B,CAR6E;;AAUtFE,cAAY,CAV0E;AAWtFC,cAAYf,MAAMK,QAAN,CAAeW,KAAf,CAAqB,YAArB,EAAmC,CAAnC,CAX0E;AAYtFC,eAAajB,MAAMK,QAAN,CAAeW,KAAf,CAAqB,YAArB,EAAmC,CAAnC,CAZyE;;AActFE,WAAS;AACPC,iBAAa,qBAAUC,KAAV,EAAiB;AAC5BC,cAAQC,GAAR,CAAY,mBAAmBF,KAA/B;AACA,WAAKG,GAAL,CAAS,YAAT,EAAuBH,KAAvB;AACD,KAJM;;AAMPI,qBAAiB,2BAAW;AAC1B,UAAIC,aAAa,IAAjB;AACA,UAAIC,cAAc,KAAKC,GAAL,CAAS,aAAT,CAAlB;;AAEA3B,YAAM4B,GAAN,CAAU,YAAW;AACnB,YAAGF,WAAH,EAAgB;AAAED,qBAAWI,IAAX,CAAgB,iBAAhB;AAAqC,SAAvD,MACK;AAAEJ,qBAAWI,IAAX,CAAgB,cAAhB;AAAkC;AAC1C,OAHD;AAID,KAdM;;AAgBPC,kBAAc,wBAAW;AACvB,UAAIL,aAAgB,IAApB;AACA,UAAIM,YAAgB,KAAKJ,GAAL,CAAS,iBAAT,CAApB;AACA,UAAIK,gBAAgB,KAAKL,GAAL,CAAS,qBAAT,CAApB;;AAEA,UAAG,CAACI,SAAJ,EAAe;AACbA,oBAAY,SAAZ;AACD;;AAED,UAAG,CAACC,aAAJ,EAAmB;AACjBA,wBAAgB,MAAhB;AACD;;AAED,UAAIC,UAAU,KAAKC,KAAL,CAAWC,YAAX,CAAwB,qBAAxB,EAA+C;AAC3DJ,mBAAWA,SADgD;AAE3DC,uBAAeA;AAF4C,OAA/C,CAAd;;AAKAC,cAAQG,IAAR,GAAeC,IAAf,CAAoB,UAASC,GAAT,EAAa;AAC/Bb,mBAAWc,iBAAX,CAA6B,kBAA7B;AACD,OAFD;AAGD,KArCM;;AAuCPC,qBAAiB,2BAAW;AAC1B,UAAIf,aAAa,IAAjB;AACA,UAAIgB,aAAa,EAAE;AACjBlC,iBAAS,KAAKoB,GAAL,CAAS,SAAT,CADM;AAEfe,mBAAW,KAAKf,GAAL,CAAS,WAAT,CAFI;AAGfgB,qBAAa,KAAKhB,GAAL,CAAS,OAAT,CAHE;AAIfiB,gBAAQ,KAAKjB,GAAL,CAAS,QAAT,CAJO;AAKfkB,kBAAU,KAAKlB,GAAL,CAAS,QAAT,CALK;AAMfmB,oBAAY,KAAKnB,GAAL,CAAS,UAAT,CANG;AAOfoB,iBAAS,KAAKpB,GAAL,CAAS,sBAAT,CAPM;AAQfqB,oBAAYC,KAAKC,KAAL,CAAW,KAAKvB,GAAL,CAAS,WAAT,CAAX,CARG;AASfwB,kBAAUF,KAAKC,KAAL,CAAY,KAAKvB,GAAL,CAAS,SAAT,CAAZ;AATK,OAAjB;;AAYA,UAAG,KAAKA,GAAL,CAAS,IAAT,CAAH,EAAmB;AACjB;AACA,YAAG3B,MAAMoD,MAAN,CAAaX,WAAWK,UAAxB,CAAH,EAAwC;AACtCO,iBAAOC,KAAP,CAAa,sBAAb;AACA;AACD;;AAED;AACA,YAAG,KAAK3B,GAAL,CAAS,QAAT,EAAmB4B,KAAnB,CAAyB,IAAzB,EAA+Bd,WAAWK,UAA1C,CAAH,EAA0D;AACxDO,iBAAOC,KAAP,CAAa,wCAAb;AACA;AACD;AACF;;AAED,UAAG,CAAC,CAAC,KAAK3B,GAAL,CAAS,MAAT,CAAL,EAAuB;AACrBc,mBAAWe,WAAX,GAAyBxD,MAAMyD,MAAN,CAAaC,CAAb,CAAgB,KAAK/B,GAAL,CAAS,MAAT,CAAhB,CAAzB;AACD;;AAED,UAAIM,UAAU,KAAKC,KAAL,CAAWC,YAAX,CAAwB,eAAxB,EAAyCM,UAAzC,CAAd;AACA,UAAIkB,MAAJ;;AAEA1B,cAAQG,IAAR,GAAeC,IAAf,CAAoB,UAASC,GAAT,EAAc;AAChC,YAAIsB,SAAStB,IAAIX,GAAJ,CAAQ,SAAR,CAAb;AACA;AACA,YAAIgC,uBAAqBC,OAAOC,QAA5B,kBAAJ;;AAEA,YAAGD,OAAOE,eAAV,EAA2B;AACzBH,oBAAU,oCAAV;AACD;;AAED;;;;;;AAMA,YAAIN,OAAOU,OAAP,CAAeJ,MAAf,CAAJ,EAA6B;AAC3B,cAAGC,OAAOC,QAAP,GAAkB,CAArB,EAAwB;AACtBR,mBAAOW,QAAP,CAAgBC,MAAhB;AACD;AACF;AACF,OApBD;AAqBD;AA/FM;AAd6E,CAApD,CAApC","file":"workspaces_new_controller.js","sourcesContent":["/**\n  * # Workspaces New Controller\n  * @description This controller for creating a new workspace\n  * @author Damola Mabogunje <damola@mathforum.org>\n  * @since 1.0.1\n*/\n\nEncompass.WorkspacesNewController = Ember.Controller.extend(Encompass.CurrentUserMixin, {\n  canEdit: Ember.computed.not('currentUser.isAdmin'),\n  teacher: Ember.computed.oneWay('currentUser.username'),\n\n  selectedPdSetId: null, \n  selectedFolderSetId: null,\n\n  hasId: Ember.computed.or('pubId', 'puzzId', 'subs'),\n  hasDate: Ember.computed.or('startDate', 'endDate'),\n  \n  importMode: 0,\n  isPdImport: Ember.computed.equal('importMode', 0),\n  isPowImport: Ember.computed.equal('importMode', 1),\n\n  actions: {\n    radioSelect: function( value ){\n      console.log(\"Radio select: \" + value );\n      this.set('importMode', value );\n    },\n\n    createWorkspace: function() {\n      var controller = this;\n      var doPoWImport = this.get('isPowImport');\n\n      Ember.run(function() {\n        if(doPoWImport) { controller.send('importWorkspace'); }\n        else { controller.send('newWorkspace'); }\n      });\n    },  \n\n    newWorkspace: function() {\n      var controller    = this;\n      var pdSetName     = this.get('selectedPdSetId');\n      var folderSetName = this.get('selectedFolderSetId');\n\n      if(!pdSetName) {\n        pdSetName = 'default';\n      }\n      \n      if(!folderSetName) {\n        folderSetName = 'none';\n      }\n      \n      var request = this.store.createRecord('newWorkspaceRequest', {\n        pdSetName: pdSetName,\n        folderSetName: folderSetName\n      });\n\n      request.save().then(function(obj){\n        controller.transitionToRoute('workspaces.index');\n      });\n    },\n\n    importWorkspace: function() {\n      var controller = this;\n      var importData = { /*jshint camelcase: false */\n        teacher: this.get('teacher'), \n        submitter: this.get('submitter'),\n        publication: this.get('pubId'),\n        puzzle: this.get('puzzId'),\n        class_id: this.get('course'),\n        collection: this.get('newPdSet'),\n        folders: this.get('selectedFolderSet.id'),\n        since_date: Date.parse(this.get('startDate') ),\n        max_date: Date.parse( this.get('endDate') ),\n      };\n\n      if(this.get('pd')) {\n        //PD set name cannot be blank\n        if(Ember.isNone(importData.collection)) {\n          window.alert('PD set name required');\n          return;\n        }\n\n        //PD set name must be unique\n        if(this.get('pdSets').isAny('id', importData.collection)) {\n          window.alert('There is already a PD set by that name');\n          return;\n        }\n      }\n\n      if(!!this.get('subs')) { \n        importData.submissions = Ember.String.w( this.get('subs') );\n      }\n\n      var request = this.store.createRecord('importRequest', importData);\n      var output;\n\n      request.save().then(function(obj) {\n        var result = obj.get('results');\n        //var output = \"Imported %@1 submissions!\".fmt(result.imported);\n        var output = `Imported ${result.imported} submissions!`;\n\n        if(result.updatedExisting) {\n          output += \"\\nYou have workspace(s) for these!\";\n        }\n\n        /*\n        if(result.addedNew) {\n          output += \"\\n\\nAdded %@1 new submissions to your workspace\".fmt(result.addedNew);\n        }\n        */\n\n        if( window.confirm(output) ) {\n          if(result.imported > 0) {\n            window.location.reload();\n          }\n        }\n      });\n    }\n  }\n});\n"]}