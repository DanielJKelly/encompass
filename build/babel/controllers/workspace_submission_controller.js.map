{"version":3,"sources":["../../../app/controllers/workspace_submission_controller.js"],"names":["Encompass","WorkspaceSubmissionController","Ember","Controller","extend","CurrentUserMixin","workspace","inject","controller","workspaceSubmissions","currentSubmission","computed","alias","currentWorkspace","currentSelection","workspaceOwner","inWorkspace","selections","get","isNone","forEach","selection","selectionWs","thisWs","belongs","set","observes","canSelect","Permissions","userCan","property","canFolder","permittedToComment","cws","owner","then","console","log","canComment","currentDragItem","findProperty","isMyWorkspace","actions","cancelComment","transitionToRoute","addSelection","user","submission","newSelection","alreadyExists","filterBy","id","length","error","window","alert","selectionType","createRecord","text","coordinates","coords","note","parent","left","top","size","width","height","save","record","s","addObject","guiders","hideAll","deleteSelection","tag","deleteRecord","comment","info"],"mappings":"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","file":"workspace_submission_controller.js","sourcesContent":["/**\n  * # Workspace Submission Controller\n  * @description The controller for interacting with a submission in the context of a workspace\n  *              This is used to set the dependency on the workspace controller and add and delete\n  *              selections \n  * @author Amir Tahvildaran <amir@mathforum.org>, Damola Mabogunje <damola@mathforum.org>\n  * @since 1.0.0\n*/\nEncompass.WorkspaceSubmissionController = Ember.Controller.extend(Encompass.CurrentUserMixin, {\n  workspace: Ember.inject.controller(),\n  //comments: Ember.inject.controller(),\n  workspaceSubmissions: Ember.inject.controller(),\n  currentSubmission: Ember.computed.alias('workspaceSubmissions.currentSubmission'),\n  currentWorkspace: Ember.computed.alias('workspace.model'),\n  currentSelection: Ember.computed.alias('workspace.currentSelection'),\n  workspaceOwner: Ember.computed.alias('currentWorkspace.owner'),\n\n  inWorkspace: function() {\n    var controller = this;\n    var selections = this.get('selections');\n\n    if( !Ember.isNone(selections) ) {\n      controller.get('selections').forEach(function(selection) {\n        var selectionWs = selection.get('workspace.id');\n        var thisWs = controller.get('currentWorkspace.id');\n        var belongs = (selectionWs === thisWs);\n\n        selection.set('inWorkspace', belongs);\n      });\n    }\n  }.observes('selections.[]'),\n\n  canSelect: function() {\n    return Permissions.userCan(\n      this.get('currentUser'),\n      this.get('currentWorkspace'),\n      \"SELECTIONS\"\n    );\n  }.property('currentUser.username', 'currentWorkspace.owner.username', 'currentWorkspace.editors.[].username'),\n\n  canFolder: function() {\n    return Permissions.userCan(\n      this.get('currentUser'),\n      this.get('currentWorkspace'),\n      \"FOLDERS\"\n    );\n  }.property('currentUser', 'currentWorkspace'),\n\n  //permittedToComment: true,\n  permittedToComment: function() {\n    var cws = this.get('currentWorkspace');\n    var owner = cws.get('owner');\n    this.get('workspaceOwner').then( function(owner){\n      console.log(\"WORKSPACE OWNER: \" + owner.get('username') );\n    });\n\n    var canComment = Permissions.userCan(\n      this.get('currentUser'),\n      this.get('currentWorkspace'),\n      \"COMMENTS\"\n    );\n\n    return canComment;\n\n    /*\n    return new Ember.RSVP.Promise(function(resolve){\n      cws.get('owner').then( function(owner){\n        cws.set('owner', owner);\n        var perm = Permissions.userCan(\n          this.get('currentUser'),\n          this.get('currentWorkspace'),\n          \"COMMENTS\"\n        );\n        resolve( perm );\n        //fetchFacebookPicture(this.get('facebookId'), resolve);\n      });\n    });\n    */\n  }.property('currentUser.username', 'currentWorkspace.owner.username', 'currentWorkspace.editors.[].username'),\n\n  currentDragItem: Ember.computed(function(){\n    return this.findProperty('isDragging', true);\n  }).property('[].isDragging'),\n\n  isMyWorkspace: function() {\n    return this.get('currentUser.username') === this.get('currentWorkspace.owner.username');\n  }.property('currentUser.username', 'currentWorkspace.owner.username'),\n\n  actions: {\n    cancelComment: function(){\n      console.log(\"Cancelling comment!\");\n      this.transitionToRoute('workspace.submission');\n    },\n\n    addSelection: function(selection) {\n      console.log(\"Controller Adding a new selection.\");\n      var user = this.get('currentUser');\n      var workspace = this.get('currentWorkspace');\n      var submission = this.get('model');\n      var controller = this;\n      var newSelection = null;\n      var alreadyExists = this.get('model.selections').filterBy('id', selection.id);\n\n      if(alreadyExists.length > 0) {\n        console.error(\"That selection already exists\");\n        return;\n      }\n\n      if(!submission.get('id')) { //ENC-475 possibility\n        window.alert('uh-oh: this submission looks odd, the selection might not save');\n      }\n\n      switch (selection.selectionType) {\n      case \"selection\":\n        newSelection = this.get('store').createRecord('selection', {\n          text: selection.text,\n          submission: submission,\n          coordinates: selection.coords,\n          workspace: workspace\n        }); \n        break;\n\n      case \"image-tag\":\n        newSelection = this.get('store').createRecord('selection', {\n          text: selection.note,\n          submission: submission,\n          coordinates: selection.parent + ' ' +\n              selection.coords.left + ' ' +\n              selection.coords.top + ' ' +\n              selection.size.width + ' ' +\n              selection.size.height,\n          workspace: workspace\n        }); \n        break;\n\n      default: \n        console.error('Invalid Selection Type');\n        return;\n      }\n\n      if(newSelection) {\n        newSelection.save().then(function(record) {\n          newSelection.set('id', record.get('id') );\n          submission.get('selections').then(function(s){\n            s.addObject(record);\n          });\n          workspace.get('selections').then(function(s){\n            s.addObject(record);\n          });\n          controller.set('currentSelection', record);\n          \n          controller.transitionToRoute('workspace.submission.selection', workspace, submission, newSelection.id);\n\n          guiders.hideAll();\n\n          if(!user.get('seenTour')) {\n            console.log('ignoring tour');\n            //guiders._highlightElement('#al_center'); //shouldn't need to do this...\n            //guiders.show('submissions.selections');\n          }\n        });\n      }\n    },\n\n    deleteSelection: function(selection) {\n      console.log(\"W-S controller, delete selection\");\n      var controller = this;\n\n      selection.set('isTrashed', true);\n\n      selection.get('taggings').forEach(function(tag) {\n        //tag.get('workspace').then(function(ws){\n        tag.set('isTrashed', true);\n        tag.save().then(function(record) { record.deleteRecord(); });\n        //});\n      });\n\n      /* Ideally we should handle comments within the comments controller */\n      selection.get('comments').forEach(function(comment) {\n        comment.set('isTrashed', true);\n        comment.save().then(function(record) { record.deleteRecord(); });\n      });\n\n      selection.save().then(function(record) {\n        record.deleteRecord(); // Locally delete the object to update UI\n        console.info('deleted selection: ' + record.get('id'));\n        controller.transitionToRoute('workspace.submission', controller.get('model'));\n      });\n    },\n  }\n});\n"]}