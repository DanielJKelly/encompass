{"version":3,"sources":["../../app/app.js"],"names":["require","window","ENV","EXPERIMENTAL_CONTROL_HELPER","QUNIT","TESTING","TEST_MODE","rootElement","PRINT_DEBUG_TO_CONSOLE","Encompass","Ember","Application","create","LOG_TRANSITIONS","LOG_TRANSITIONS_INTERNAL","LOG_VIEW_LOOKUPS","LOG_ACTIVE_GENERATION","LOG_BINDINGS","setupForTesting","injectTestHelpers","run","backburner","DEBUG","ApplicationAdapter","DS","RESTAdapter","extend","namespace","coalesceFindRequests","headers","ApplicationSerializer","RESTSerializer","primaryKey","isNewSerializerAPI","StoreService","Store","CacheableModels","adapter","RawTransform","Transform","deserialize","serialized","serialize","deserialized"],"mappings":";;AAAA;;;;;;;;;;;AAWAA,QAAQ,6BAAR;AACAA,QAAQ,0BAAR;AACAA,QAAQ,4BAAR;AACAA,QAAQ,qCAAR;AACAA,QAAQ,4BAAR;AACA;;;;AAIAA,QAAQ,+BAAR;AACAA,QAAQ,4BAAR;;AAEAA,QAAQ,sBAAR;AACAA,QAAQ,sBAAR;;AAEA;;;;;AAKAA,QAAQ,iCAAR;;AAEA;;;;AAIAC,OAAOC,GAAP,GAAaD,OAAOC,GAAP,IAAc,EAA3B,C,CAA+B;AAC/BD,OAAOC,GAAP,CAAWC,2BAAX,GAAyC,IAAzC;AACA;AACAH,QAAQ,4CAAR;;AAEA;AACAA,QAAQ,0BAAR;;AAEA;AACA;AACAA,QAAQ,+BAAR;;AAEAA,QAAQ,yBAAR;;AAEAA,QAAQ,oBAAR;AACAA,QAAQ,mBAAR;;AAEA;;;;;;;AAOAA,QAAQ,iCAAR;;AAEA,IAAII,QAAUH,OAAOI,OAArB;AACA,IAAIC,YAAaF,KAAjB;AACA,IAAIG,cAAc,YAAlB;AACA,IAAIC,yBAAyB,IAA7B;;AAEA,IAAIF,SAAJ,EAAe;AACbE,2BAAyB,KAAzB;AACAD,gBAAc,mBAAd;AACD;;AAED;;;;;AAKAN,OAAOQ,SAAP,GAAmBC,MAAMC,WAAN,CAAkBC,MAAlB,CAAyB;AAC1CL,eAA4BA,WADc;AAE1CM,mBAA4BL,sBAFc;AAG1CM,4BAA4BN,sBAHc;AAI1CO,oBAA4BP,sBAJc;AAK1CQ,yBAA4BR,sBALc;AAM1CS,gBAA4BT;AANc,CAAzB,CAAnB;;AASA,IAAIJ,KAAJ,EAAW;AACTK,YAAUS,eAAV;AACAT,YAAUU,iBAAV;AACD;;AAEDT,MAAMU,GAAN,CAAUC,UAAV,CAAqBC,KAArB,GAA6B,IAA7B;;AAEAb,UAAUc,kBAAV,GAA+BC,GAAGC,WAAH,CAAeC,MAAf,CAAsB;AACnDC,aAAW,KADwC;AAEnD;AACAC,wBAAsB,IAH6B;AAInDC,WAAS;AACP,sBAAkB;AADX;AAJ0C,CAAtB,CAA/B;;AASApB,UAAUqB,qBAAV,GAAkCN,GAAGO,cAAH,CAAkBL,MAAlB,CAAyB;AACzDM,cAAY,KAD6C,EACtC;AACnBC,sBAAoB;AAFqC,CAAzB,CAAlC;;AAKAjC,QAAQ,cAAR;;AAEAS,UAAUyB,YAAV,GAAyBV,GAAGW,KAAH,CAAST,MAAT,CAAgBjB,UAAU2B,eAA1B,EAA2C;AAClEC,WAAS5B,UAAUc;AAD+C,CAA3C,CAAzB;;AAIA;;;;AAIAd,UAAU6B,YAAV,GAAyBd,GAAGe,SAAH,CAAab,MAAb,CAAoB;;AAE3Cc,eAAa,qBAASC,UAAT,EAAqB;AAChC,WAAOA,UAAP;AACD,GAJ0C;;AAM3CC,aAAW,mBAASC,YAAT,EAAuB;AAChC,WAAOA,YAAP;AACD;AAR0C,CAApB,CAAzB;;AAYA;;;;;;;AAOA3C,QAAQ,cAAR;;AAEA;;;;;;;AAOAA,QAAQ,mBAAR;;AAEA;;;;;;AAMAA,QAAQ,aAAR;AACAA,QAAQ,cAAR;;AAEAA,QAAQ,kBAAR;;AAEAA,QAAQ,eAAR","file":"app.js","sourcesContent":["/*\n * Hey! This is an Ember application. It's built using a\n * neuter task (see this project's Gruntfile for what that means).\n *\n * `require`s in this file will be stripped and replaced with\n * the string contents of the file they refer to wrapped in\n * a closure.\n *\n * Each file contains its own commenting, so feel free to crack\n * them open if you want more information about what is going on.\n*/\nrequire('dependencies/underscore-min');\nrequire('dependencies/ie_hacks.js');\nrequire('dependencies/image-tagging');\nrequire('dependencies/selection-highlighting');\nrequire('dependencies/bind.polyfill');\n/*\n * These are the dependencies for an Ember application\n * and they have to be loaded before any application code.\n*/\nrequire('dependencies/jquery-3.2.1.min');\nrequire('dependencies/jquery.cookie');\n\nrequire('dependencies/guiders');\nrequire('dependencies/jq.keys');\n\n/*\n * Since we're precompiling our templates, we only need the\n * handlebars-runtime microlib instead of the\n * entire handlebars library and its string parsing functions.\n*/\nrequire('dependencies/handlebars-runtime');\n\n/** This is Ember. I think you'll like it\n * The window.ENV setting enables the {{control}} helper in Ember templates\n * Must be set before ember is required\n */\nwindow.ENV = window.ENV || {}; // Enable {{control}} helper in Ember templates\nwindow.ENV.EXPERIMENTAL_CONTROL_HELPER = true;\n//require('dependencies/ember-template-compiler2_0_3');\nrequire('dependencies/ember-template-compiler2_14_1');\n\n//require('dependencies/ember2_0_3');\nrequire('dependencies/ember2_14_1');\n\n//require('dependencies/ember-data2_0_1');\n//require('dependencies/ember-data2_2_1');\nrequire('dependencies/ember-data2_12_2');\n\nrequire('dependencies/moment.min');\n\nrequire('dependencies/error');\nrequire('dependencies/ajax');\n\n/*\n  this file is generated as part of the build process.\n  If you haven't run that yet, you won't see it.\n\n  It is excluded from git commits since it's a\n  generated file.\n*/\nrequire('dependencies/compiled/templates');\n\nvar QUNIT   = window.TESTING;\nvar TEST_MODE = (QUNIT);\nvar rootElement = '#encompass';\nvar PRINT_DEBUG_TO_CONSOLE = true;\n\nif (TEST_MODE) {\n  PRINT_DEBUG_TO_CONSOLE = false;\n  rootElement = '#testing-location';\n}\n\n/*\n  Creates a new instance of an Ember application and\n  specifies what HTML element inside index.html Ember\n  should manage for you.\n*/\nwindow.Encompass = Ember.Application.create({\n  rootElement:                rootElement,\n  LOG_TRANSITIONS:            PRINT_DEBUG_TO_CONSOLE,\n  LOG_TRANSITIONS_INTERNAL:   PRINT_DEBUG_TO_CONSOLE,\n  LOG_VIEW_LOOKUPS:           PRINT_DEBUG_TO_CONSOLE,\n  LOG_ACTIVE_GENERATION:      PRINT_DEBUG_TO_CONSOLE,\n  LOG_BINDINGS:               PRINT_DEBUG_TO_CONSOLE\n});\n\nif (QUNIT) {\n  Encompass.setupForTesting();\n  Encompass.injectTestHelpers();\n}\n\nEmber.run.backburner.DEBUG = true;\n\nEncompass.ApplicationAdapter = DS.RESTAdapter.extend({\n  namespace: 'api',\n  //fetchBatchSize: 100, thought this would work for beta.9 but no\n  coalesceFindRequests: true,\n  headers: {\n    'Accept-Version': '*'\n  }\n});\n\nEncompass.ApplicationSerializer = DS.RESTSerializer.extend({\n  primaryKey: \"_id\", // Fix for Ember to recognise Mongoose object ids\n  isNewSerializerAPI: true\n});\n\nrequire('app/mixins/*');\n\nEncompass.StoreService = DS.Store.extend(Encompass.CacheableModels, {\n  adapter: Encompass.ApplicationAdapter\n});\n\n/* Raw transformation type for sending data over without serialization\n   -- We probably want to move this into a transformations folder\n      if we end up needing others\n*/\nEncompass.RawTransform = DS.Transform.extend({\n\n  deserialize: function(serialized) {\n    return serialized;\n  },\n\n  serialize: function(deserialized) {\n    return deserialized;\n  }\n});\n\n\n/*\n * Model layer.\n * Ember.Object itself provides most of what\n * model layers elsewhere provide. Since TodoMVC\n * doesn't communicate with a server, plain\n * Ember.Objects will do.\n*/\nrequire('app/models/*');\n\n/*\n * Controller layer.\n * Controllers wrap objects and provide a place\n * to implement properties for display\n * whose value is computed from the content of the\n * controllers wrapped objects.\n*/\nrequire('app/controllers/*');\n\n/*\n * States (i.e. Routes)\n * Handles serialization of the application's current state\n * which results in view hierarchy updates. Responds to\n * actions.\n*/\nrequire('./router.js');\nrequire('app/routes/*');\n\nrequire('app/components/*');\n\nrequire('app/helpers/*');\n\n"]}