{"version":3,"sources":["../../../app/components/comment-list.js"],"names":["Encompass","CommentListComponent","Ember","Component","extend","myCommentsOnly","thisWorkspaceOnly","commentFilterText","filterComments","newComment","newCommentLabel","newCommentParent","labels","notice","placeholder","wonder","feedback","useForResponse","newCommentPlaceholder","get","_","isArray","random","length","property","filteredComments","filtered","comments","filterBy","regexp","RegExp","filter","comment","test","clearCommentParent","set","textContainsTag","tags","text","split","forEach","word","match","push","substring","toLowerCase","onSelection","canComment","console","log","actions","cancelComment","sendAction","createComment","user","label","trim","selection","currentSelection","currentSubmission","data","submission","workspace","currentWorkspace","parent","JSON","stringify","createRecord","send","comp","save","then","record","addObject","pushObject","deleteComment","reuseComment","controller","$","focus","setCommentLabel","toggleFilter","toggleProperty"],"mappings":"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","file":"comment-list.js","sourcesContent":["/**\n * Passed in by template:\n * - comments\n * - currentWorkspace\n * - currentUser\n * - currentSubmission\n * - currentSelection\n * - store\n *\n *   TODO:\n *   - Test the hashtag stuff to see if that is still working.\n */\nEncompass.CommentListComponent = Ember.Component.extend({\n  myCommentsOnly: false,\n  thisWorkspaceOnly: true,\n  commentFilterText: '',\n  filterComments: false,\n  newComment: '',\n  newCommentLabel: 'notice',\n  newCommentParent: null,\n  labels: {\n    notice: {\n      placeholder: 'I notice...'\n    },\n    wonder: {\n      placeholder: 'I wonder...'\n    },\n    feedback: {\n      placeholder:['Interesting...', 'Did you try...', 'What about...', 'I am interested in...',\n        'I would like...', 'Seems promising...', 'What if...', 'How do you know...', 'Can you say more...'],\n      useForResponse: true\n    }\n  },\n\n  newCommentPlaceholder: function() {\n    var placeholder = this.labels[this.get('newCommentLabel')].placeholder;\n    if(_.isArray(placeholder)) {\n      placeholder = placeholder[_.random(0, placeholder.length - 1)];\n    }\n    return placeholder;\n  }.property('newCommentLabel'),\n\n  filteredComments: function() {\n    var filtered = this.comments.filterBy('isTrashed', false);\n\n    if( this.myCommentsOnly ){\n      filtered = filtered.filterBy( 'createdBy', this.get('currentUser') );\n    }\n\n    if( this.filterComments ){\n      var regexp = new RegExp(this.commentFilterText, \"i\");\n      filtered = filtered.filter( function(comment){\n        //item.get('url').match(regExp);\n        return regexp.test( comment.get('text') );\n      });\n    }\n    return filtered;\n  }.property('comments.[]', 'comments.@each.isTrashed', 'myCommentsOnly', 'filterComments', 'commentFilterText'),\n\n  clearCommentParent: function() {\n    if(this.get('newCommentParent')) {\n      this.set('newCommentParent.inReuse', false);\n      this.set('newCommentParent', null);\n    }\n  },\n\n  textContainsTag: function(){\n    return !!this.get('tags.length');\n  }.property('tags'),\n\n  tags: function(){\n    var text = this.get('newComment');\n    var tags = [];\n    text.split(/\\s+/).forEach(function(word){\n      if(word.match(/^#\\S+/)){\n        tags.push(word.substring(1).toLowerCase());\n      }\n    });\n    return tags;\n  }.property('newComment'),\n\n  onSelection: function() {\n    return !!this.get('currentSelection');\n  }.property('currentSelection'),\n\n  //canComment: true,\n  canComment: function() {\n    console.log(\"Folder List onSelection: \" + this.get('onSelection') + \", allowedToComment: \" + this.get('allowedToComment') );\n    return (this.get('onSelection') && this.get('allowedToComment'));\n  }.property('onSelection', 'allowedToComment'),\n\n  actions: {\n    cancelComment: function() {\n      this.clearCommentParent();\n      this.set('newComment', '');\n      this.sendAction('resetComment');\n    },\n\n    createComment: function() {\n      var user = this.get('currentUser');\n      var label = this.get('newCommentLabel');\n      var text = this.get('newComment');\n      console.log(\"Create Comment text: \" + text );\n      var useForResponse = this.labels[label].useForResponse;\n      //var controller = this;\n      if (!text || !text.trim()) { return; }\n\n      //var selection = this.currentWorkspace.get('currentSelection');\n      var selection = this.currentSelection;\n      var currentSubmission = this.get( 'currentSubmission' );\n      console.log(\"Sumbission: \" + currentSubmission.get(\"submissionId\") );\n      console.log(\"Selection: \" + selection.get(\"selectionId\") );\n\n      var data = {\n        text: text,\n        label: label,\n        selection: selection,\n        submission: currentSubmission,\n        workspace: this.currentWorkspace,\n        parent: this.get('newCommentParent'),\n        useForResponse: !!useForResponse\n      };\n\n      console.log(\"New comment data:\\n\" + JSON.stringify(data) );\n      var comment = this.get('store').createRecord('comment', data);\n\n      //TODO push comment onto origin's derivatives\n\n      if(this.get('textContainsTag')) {\n        this.send('tagSelection', selection, this.get('tags'));\n      }\n\n      var newCommentParent = this.get('newCommentParent');\n      var comp = this;\n\n      comment.save().then(function(record) {\n        //controller.get('currentSelection.comments').addObject(record);\n        selection.get('comments').then(function(comments){\n          comments.addObject(record);\n        });\n        currentSubmission.get('comments').then(function(comments){\n          comments.addObject(record);\n        });\n        if( newCommentParent ) {\n          newCommentParent.get( 'children' ).then(function(comments){\n            comments.addObject(record);\n          });\n        }\n        comp.set('newComment', ''); //clear out the comment\n        comp.clearCommentParent();\n        comp.get('comments').pushObject(record);\n      });\n    },\n\n    deleteComment: function(comment) {\n      comment.get('submission').then(function(submission){\n        console.log(\"Comment to delete submission: \" + submission.get('submissionId'));\n        comment.set('isTrashed', true);\n        comment.save();\n      });\n    },\n\n    reuseComment: function(comment) {\n      console.log(\"Reuse Comment in Comment-list: \" + comment.get('label') );\n      var controller = this;\n\n      //copy the comment text to the input\n      this.set('newComment', this.get('newComment') + ' ' + comment.get('text'));\n      //set the comment label to match, right?\n      this.set('newCommentLabel', comment.get('label'));\n      //record that the comment is being reused\n      this.clearCommentParent();\n      this.set('newCommentParent', comment);\n      comment.set('inReuse', true);\n\n      $('#commentTextarea').focus();\n    },\n\n    setCommentLabel: function(label) {\n      this.set('newCommentLabel', label);\n    },\n\n    toggleFilter: function() {\n      this.toggleProperty('showFilter');\n    }\n  }\n});\n\n"]}