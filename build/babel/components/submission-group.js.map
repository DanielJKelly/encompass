{"version":3,"sources":["../../../app/components/submission-group.js"],"names":["Encompass","SubmissionGroupComponent","Ember","Component","extend","currentStudent","computed","alias","firstThread","lastThread","manyRevisions","gte","showStudents","submissionThreads","threads","Map","create","comp","submissions","get","sortBy","getEach","uniq","forEach","student","has","studentWork","set","property","filterBy","submissionThreadHeads","pointers","pushObject","currentThread","prevThread","thread","prevIndex","indexOf","prev","objectAt","nextThread","nextIndex","next","currentRevisions","dateTime","revisions","map","submission","index","label","moment","format","revision","actions","toggleStudentList","addSelection","selection","console","log","sendAction","deleteSelection"],"mappings":";;AAAA;;;;;;;;AAQAA,UAAUC,wBAAV,GAAqCC,MAAMC,SAAN,CAAgBC,MAAhB,CAAuB;AAC1DC,kBAAgBH,MAAMI,QAAN,CAAeC,KAAf,CAAqB,oBAArB,CAD0C;AAE1DC,eAAaN,MAAMI,QAAN,CAAeC,KAAf,CAAqB,mCAArB,CAF6C;AAG1DE,cAAYP,MAAMI,QAAN,CAAeC,KAAf,CAAqB,kCAArB,CAH8C;AAI1DG,iBAAeR,MAAMI,QAAN,CAAeK,GAAf,CAAmB,yBAAnB,EAA8C,EAA9C,CAJ2C;AAK1DC,gBAAc,KAL4C;;AAO1D;AACAC,qBAAmB,YAAW;AAC5B,QAAIC,UAAUZ,MAAMa,GAAN,CAAUC,MAAV,EAAd;AACA,QAAIC,OAAO,IAAX;;AAEA,SAAKC,WAAL,CAAiBC,GAAjB,CAAqB,SAArB,EACGC,MADH,CACU,SADV,EAEGC,OAFH,CAEW,SAFX,EAGGC,IAHH,GAIGC,OAJH,CAIW,UAASC,OAAT,EAAkB;AACzB,UAAG,CAACV,QAAQW,GAAR,CAAYD,OAAZ,CAAJ,EAA0B;AACxB,YAAIN,cAAcD,KAAKS,WAAL,CAAiBF,OAAjB,CAAlB;AACA;;;;;;;;AAQAV,gBAAQa,GAAR,CAAYH,OAAZ,EAAqBN,WAArB;AACD;AACF,KAjBH;;AAmBA,WAAOJ,OAAP;AACD,GAxBkB,CAwBjBc,QAxBiB,CAwBR,qBAxBQ,CARuC;;AAkC1DF,eAAa,qBAASF,OAAT,EAAkB;AAC7B,QAAIN,cAAc,KAAKC,GAAL,CAAS,aAAT,EACDU,QADC,CACQ,SADR,EACmBL,OADnB,EAEDJ,MAFC,CAEM,YAFN,CAAlB;;AAIA,WAAOF,WAAP;AACD,GAxCyD;;AA0C1DY,yBAAuB,YAAW;AAChC,QAAIC,WAAW,EAAf;AACA,QAAIjB,UAAU,KAAKK,GAAL,CAAS,mBAAT,CAAd;;AAEAL,YAAQS,OAAR,CAAgB,UAASL,WAAT,EAAsBM,OAAtB,EAA+B;AAC7CO,eAASC,UAAT,CAAqBd,YAAYC,GAAZ,CAAgB,YAAhB,CAArB;AACD,KAFD;;AAIA,WAAOY,QAAP;AACD,GATsB,CASrBH,QATqB,CASZ,2BATY,CA1CmC;;AAqD1DK,iBAAe,YAAW;AACxB,WAAO,KAAKd,GAAL,CAAS,mBAAT,EACJA,GADI,CACC,KAAKA,GAAL,CAAS,gBAAT,CADD,CAAP;AAED,GAHc,CAGbS,QAHa,CAGJ,iBAHI,CArD2C;;AA0D1DM,cAAY,YAAW;AACrB,QAAIC,SAAS,KAAKhB,GAAL,CAAS,0BAAT,CAAb;;AAEA,QAAGgB,WAAW,KAAKhB,GAAL,CAAS,aAAT,CAAd,EAAuC;AACrC,aAAO,KAAKA,GAAL,CAAS,YAAT,CAAP;AACD;;AAED,QAAIiB,YAAY,KAAKjB,GAAL,CAAS,uBAAT,EAAkCkB,OAAlC,CAA0CF,MAA1C,IAAoD,CAApE;AACA,QAAIG,OAAO,KAAKnB,GAAL,CAAS,uBAAT,EAAkCoB,QAAlC,CAA2CH,SAA3C,CAAX;;AAEA,WAAOE,IAAP;AACD,GAXW,CAWVV,QAXU,CAWD,eAXC,EAWgB,aAXhB,CA1D8C;;AAuE1DY,cAAY,YAAW;AACrB,QAAIL,SAAS,KAAKhB,GAAL,CAAS,0BAAT,CAAb;;AAEA,QAAGgB,WAAW,KAAKhB,GAAL,CAAS,YAAT,CAAd,EAAsC;AACpC,aAAO,KAAKA,GAAL,CAAS,aAAT,CAAP;AACD;;AAED,QAAIsB,YAAY,KAAKtB,GAAL,CAAS,uBAAT,EAAkCkB,OAAlC,CAA0CF,MAA1C,IAAoD,CAApE;AACA,QAAIO,OAAO,KAAKvB,GAAL,CAAS,uBAAT,EAAkCoB,QAAlC,CAA2CE,SAA3C,CAAX;;AAEA,WAAOC,IAAP;AACD,GAXW,CAWVd,QAXU,CAWD,iBAXC,EAWkB,eAXlB,EAWmC,YAXnC,CAvE8C;;AAoF1De,oBAAkB,YAAW;AAC3B,QAAIC,WAAY,QAAhB;AACA,QAAIT,SAAY,KAAKhB,GAAL,CAAS,eAAT,CAAhB;AACA,QAAI0B,YAAY,EAAhB;;AAEA,QAAGV,MAAH,EAAW;AACTU,kBAAYV,OAAOW,GAAP,CAAW,UAASC,UAAT,EAAqBC,KAArB,EAA4Bb,MAA5B,EAAoC;AACzD,eAAO;AACLa,iBAAOA,QAAM,CADR,EACW;AAChBC,iBAAOC,OAAOH,WAAW5B,GAAX,CAAe,YAAf,CAAP,EAAqCgC,MAArC,CAA4CP,QAA5C,CAFF;AAGLQ,oBAAUL,UAHL;AAILZ,kBAAQA,OAAOhB,GAAP,CAAW,YAAX;AAJH,SAAP;AAMD,OAPW,CAAZ;AAQD;;AAED,WAAO0B,SAAP;AACD,GAjBiB,CAiBhBjB,QAjBgB,CAiBP,eAjBO,CApFwC;;AAuG1DyB,WAAS;AACPC,uBAAmB,6BAAW;AAC5B,WAAK3B,GAAL,CAAS,cAAT,EAAyB,CAAC,KAAKR,GAAL,CAAS,cAAT,CAA1B;AACD,KAHM;;AAKP;;;AAGAoC,kBAAc,sBAAUC,SAAV,EAAqB;AACjCC,cAAQC,GAAR,CAAY,2CAAZ;AACA,WAAKC,UAAL,CAAiB,cAAjB,EAAiCH,SAAjC;AACD,KAXM;;AAaP;;;AAGAI,qBAAiB,yBAAUJ,SAAV,EAAqB;AACpCC,cAAQC,GAAR,CAAY,8CAAZ;AACA,WAAKC,UAAL,CAAiB,iBAAjB,EAAoCH,SAApC;AACD;AAnBM;AAvGiD,CAAvB,CAArC","file":"submission-group.js","sourcesContent":["/**\n * Passed in by template:\n * - submissions\n * - submission\n * - canSelect - only used to pass on to submissions\n * - currentUser - only used to pass on to submissions\n * - currentWorkspace - only used to pass on to submissions\n */\nEncompass.SubmissionGroupComponent = Ember.Component.extend({\n  currentStudent: Ember.computed.alias('submission.student'),\n  firstThread: Ember.computed.alias('submissionThreadHeads.firstObject'),\n  lastThread: Ember.computed.alias('submissionThreadHeads.lastObject'),\n  manyRevisions: Ember.computed.gte('currentRevisions.length', 10),\n  showStudents: false,\n\n  //TODO Use the new thread.threadId property on submissions\n  submissionThreads: function() {\n    var threads = Ember.Map.create();\n    var comp = this;\n\n    this.submissions.get('content')\n      .sortBy('student')\n      .getEach('student')\n      .uniq()\n      .forEach(function(student) {\n        if(!threads.has(student)) {\n          var submissions = comp.studentWork(student);\n          /*\n          var thread = {\n            id: submissions.get('lastObject.threadId'),\n            head: submissions.get('lastObject'),\n            student: student,\n            revisions: submissions,\n          };*/\n\n          threads.set(student, submissions);\n        }\n      });\n\n    return threads;\n  }.property('this.submissions.[]'),\n\n  studentWork: function(student) {\n    var submissions = this.get('submissions')\n                    .filterBy('student', student)\n                    .sortBy('createDate');\n\n    return submissions;\n  },\n\n  submissionThreadHeads: function() {\n    var pointers = [];\n    var threads = this.get('submissionThreads');\n\n    threads.forEach(function(submissions, student) {\n      pointers.pushObject( submissions.get('lastObject') );\n    });\n\n    return pointers;\n  }.property('this.submissionThreads.[]'),\n\n  currentThread: function() {\n    return this.get('submissionThreads')\n      .get( this.get('currentStudent') );\n  }.property('this.submission'),\n\n  prevThread: function() {\n    var thread = this.get('currentThread.lastObject');\n\n    if(thread === this.get('firstThread')) {\n      return this.get('lastThread');\n    }\n\n    var prevIndex = this.get('submissionThreadHeads').indexOf(thread) - 1;\n    var prev = this.get('submissionThreadHeads').objectAt(prevIndex);\n\n    return prev;\n  }.property('currentThread', 'firstThread'),\n\n  nextThread: function() {\n    var thread = this.get('currentThread.lastObject');\n\n    if(thread === this.get('lastThread')) {\n      return this.get('firstThread');\n    }\n\n    var nextIndex = this.get('submissionThreadHeads').indexOf(thread) + 1;\n    var next = this.get('submissionThreadHeads').objectAt(nextIndex);\n\n    return next;\n  }.property('this.submission', 'currentThread', 'lastThread'),\n\n  currentRevisions: function() {\n    var dateTime  = 'l h:mm';\n    var thread    = this.get('currentThread');\n    var revisions = [];\n\n    if(thread) {\n      revisions = thread.map(function(submission, index, thread) { \n        return {\n          index: index+1, // Because arrays are zero-indexed\n          label: moment(submission.get('createDate')).format(dateTime),\n          revision: submission,\n          thread: thread.get('lastObject')\n        };\n      });\n    }\n\n    return revisions;\n  }.property('currentThread'),\n\n  actions: {\n    toggleStudentList: function() {\n      this.set('showStudents', !this.get('showStudents'));\n    },\n\n    /**\n     * This action will be sent to this component from the workspace-submission component.\n     */\n    addSelection: function( selection ){\n      console.log(\"Submission-group sending add action up...\");\n      this.sendAction( 'addSelection', selection );\n    },\n\n    /**\n     * This action will be sent to this component from the workspace-submission component.\n     */\n    deleteSelection: function( selection ){\n      console.log(\"Submission-group sending delete action up...\");\n      this.sendAction( 'deleteSelection', selection );\n    },\n  }\n});\n\n"]}